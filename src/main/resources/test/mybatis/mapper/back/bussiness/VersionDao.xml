<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.june.dao.back.bussiness.client.VersionDao">
	<!-- 查询列表SQL -->
	<sql id="selectData">
		SELECT v.CLIENT_ID    	AS versionId,
		       v.CLIENT_NAME  	AS versionName,
		       v.CLIENT_CODE  	AS versionCode,
		       v.CLIENT_INFO 	AS versionInfo,
		       v.CLIENT_DATE   	AS versionTime,
		       v.CLIENT_PATH   	AS versionPath,
		       v.ADD_USER_ID    AS addUserId,
		       v.ADD_TIME       AS addTime,
		       v.UPDATE_USER_ID AS updateUserId,
		       v.UPDATE_TIME    AS updateTime,
		       v.VERSION        AS version
		  FROM CLIENT_VERSION 	v
		 WHERE 1 = 1
		<if test="versionName != null and versionName != ''">
			AND v.CLIENT_NAME LIKE CONCAT(CONCAT('%', #{versionName}), '%')
		</if>
		<if test="versionCode != null and versionCode != ''">
			AND v.CLIENT_CODE LIKE CONCAT(CONCAT('%', #{versionCode}), '%')
		</if>
	</sql>
	<!-- 查询客户端版本列表 -->
	<select id="getPageList" resultType="com.june.dto.back.bussiness.client.VersionDto"
		parameterType="com.june.dto.back.bussiness.client.VersionDto">
		<include refid="pagetop" />
		<include refid="selectData" />
			ORDER BY v.ADD_TIME
		<include refid="pageend" />
	</select>
	<sql id="pagetop">
		<![CDATA[SELECT * FROM (SELECT ROWNUM AS PNUM, TNUM.* FROM ( ]]>
	</sql>
	<sql id="pageend">
		<![CDATA[) TNUM WHERE ROWNUM <= #{startadd} + #{pageSize}) TPAGE WHERE TPAGE.PNUM > #{start}]]>
	</sql>
	<sql id="pagelimit">
		limit #{start}, #{pageSize}
	</sql>

	<!-- 查询总条数 -->
	<select id="getTotal" resultType="int">
		SELECT COUNT(1) FROM ( <include refid="selectData" /> ) T
	</select>

	<!-- 查询所有客户端版本列表 -->
	<select id="getList" resultType="com.june.dto.back.bussiness.client.VersionDto" 
		parameterType="com.june.dto.back.bussiness.client.VersionDto">
		<include refid="selectData" />
	</select>
	
	<!-- 根据客户端版本id 获取一条记录 -->
	<select id="get" parameterType="com.june.dto.back.bussiness.client.VersionDto" 
		resultType="com.june.dto.back.bussiness.client.VersionDto">
		SELECT v.CLIENT_ID    	AS versionId,
		       v.CLIENT_NAME  	AS versionName,
		       v.CLIENT_CODE  	AS versionCode,
		       v.CLIENT_INFO 	AS versionInfo,
		       v.CLIENT_DATE   	AS versionTime,
		       v.CLIENT_PATH   	AS versionPath,
		       v.ADD_USER_ID    AS addUserId,
		       v.ADD_TIME       AS addTime,
		       v.UPDATE_USER_ID AS updateUserId,
		       v.UPDATE_TIME    AS updateTime,
		       v.VERSION        AS version
		  FROM CLIENT_VERSION 	v
		WHERE v.CLIENT_ID = #{versionId}
	</select>

	<!-- 添加客户端版本信息 -->
	<insert id="add" parameterType="com.june.dto.back.bussiness.client.VersionDto">
		<selectKey keyProperty="versionId" resultType="java.lang.String" order="BEFORE">
			SELECT SEQ_CLIENT_VERSION.NEXTVAL AS CLIENT_ID FROM DUAL 
		</selectKey>
		INSERT INTO CLIENT_VERSION
		  (CLIENT_ID,
		   CLIENT_NAME,
		   CLIENT_CODE,
		   CLIENT_INFO,
		   CLIENT_DATE,
		   CLIENT_PATH,
		   ADD_USER_ID,
		   ADD_TIME,
		   UPDATE_USER_ID,
		   UPDATE_TIME,
		   VERSION)
		VALUES
		  (#{versionId},
		   #{versionName},
		   #{versionCode},
		   #{versionInfo},
		   	<if test="versionTime != null and versionTime != '' ">
				#{versionTime,jdbcType=TIMESTAMP},
			</if>
			<if test="versionTime == null or versionTime == '' ">
				null,
			</if>
		   #{versionPath},
		   #{addUserId},
		   SYSDATE,
		   #{addUserId},
		   SYSDATE,
		   0)
	</insert>

	<!-- 编辑客户端版本信息 -->
	<update id="update" parameterType="com.june.dto.back.bussiness.client.VersionDto">
		UPDATE CLIENT_VERSION
		   SET CLIENT_NAME     	= #{versionName},
		       CLIENT_CODE    	= #{versionCode},
		       CLIENT_INFO		= #{versionInfo},
		       CLIENT_DATE   	= #{versionTime,jdbcType=TIMESTAMP},
		       CLIENT_PATH   	= #{versionPath},
		       UPDATE_USER_ID 	= #{sys_user},
		       UPDATE_TIME    	= SYSDATE,
		       VERSION        	= VERSION + 1
		 WHERE CLIENT_ID 		= #{versionId}
	</update>

	<!-- 删除客户端版本 -->
	<delete id="delete" parameterType="com.june.dto.back.bussiness.client.VersionDto">
	  DELETE FROM CLIENT_VERSION WHERE CLIENT_ID = #{versionId}
	</delete>
	
	<!-- DROPS -->
	<select id="getDrops" parameterType="com.june.dto.back.bussiness.client.VersionDto"
		resultType="com.june.dto.back.common.TreeDto">
		SELECT v.CLIENT_ID    	AS id,
		       v.CLIENT_NAME  	AS name
		FROM CLIENT_VERSION v 
		WHERE 1=1
	</select>
</mapper>